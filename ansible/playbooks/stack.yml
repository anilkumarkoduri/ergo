- name: Create Web Layer in Stack
  hosts: DEV
  become: yes
  gather_facts: yes
  vars:
    TOMCON_URL: "http://redrockdigimark.com/apachemirror/tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.42-src.tar.gz"

  tasks:
    - name: Get tomcat-connectors Dir 
      shell: echo "{{TOMCON_URL}}" | awk -F / '{print $NF}' | sed -e 's/.tar.gz//'
      register: out

    - name: Define tomcat-donnectors dir variable
      set_fact:
        TOMCON_DIR: "{{out.stdout}}"

    - name: Install Web Server
      yum:
        name: "{{item}}"
        state: installed
      with_items:
        - httpd
        - httpd-devel
        - gcc

    - name: Download mod_jk  and extract it
      #get_url: 
      #  url: http://redrockdigimark.com/apachemirror/tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.42-src.tar.gz
      #  dest: /root/tomcat-connectors-1.2.42-src.tar.gz
      unarchive:
        src: "{{TOMCON_URL}}"
        dest: /root
        remote_src: yes

    - name: Check mod_jk.so file
      stat:
        path: /etc/httpd/modules/mod_jk.so 
      register: out

    - name: Compile mod_jk
      shell: "{{item}}"
      args:
        chdir: /root/{{TOMCON_DIR}}/native
      with_items:
        - "./configure --with-apxs=/bin/apxs"
        - make 
        - make install
      when: out.stat.exists == false

    - name: Create workers.properties file
      blockinfile:
        path: /etc/httpd/conf.d/workers.properties
        create: yes
        block: |
            worker.list=tomcatA
            worker.tomcatA.type=ajp13
            worker.tomcatA.host=localhost
            worker.tomcatA.port=8009

    - name: Create mod_jk.conf file
      blockinfile:
        path: /etc/httpd/conf.d/mod_jk.conf
        create: yes
        block: |
            LoadModule jk_module modules/mod_jk.so
            JkWorkersFile conf.d/workers.properties
            JkLogFile logs/mod_jk.log
            JkLogLevel info
            JkLogStampFormat "[%a %b %d %H:%M:%S %Y]"
            JkOptions +ForwardKeySize +ForwardURICompat -ForwardDirectories
            JkRequestLogFormat "%w %V %T"
            JkMount /student tomcatA
            JkMount /student/* tomcatA

    - name: Restart web Server
      service: 
        name: httpd
        state: restarted

- name: Create APP Layer to Stack
  hosts: DEV
  become: yes
  vars:
    TOMCAT_URL: "http://redrockdigimark.com/apachemirror/tomcat/tomcat-9/v9.0.2/bin/apache-tomcat-9.0.2.tar.gz"
    USERNAME: student
    TOMCAT_DIR: /tomcat
    WAR_URL: 
      URL: https://github.com/carreerit/ergo/raw/master/APPSTACK/student.war
      LOC: "{{TOMCAT_DIR}}/{{TOMCAT_TAR_DIR}}/webapps"
    JDBC_URL: 
      URL: https://github.com/carreerit/cogito/raw/master/appstack/mysql-connector-java-5.1.40.jar
      LOC: "{{TOMCAT_DIR}}/{{TOMCAT_TAR_DIR}}/lib"

  tasks:
    - name: Get tomcat- Dir 
      shell: echo "{{TOMCAT_URL}}" | awk -F / '{print $NF}' | sed -e 's/.tar.gz//'
      register: out

    - name: Define tomcat dir variable
      set_fact:
        TOMCAT_TAR_DIR: "{{out.stdout}}"

    - name: Install Java
      yum: 
        name: java 
        state: installed

    - name: Create {{USERNAME}} user 
      user:
        name: "{{USERNAME}}"

    - name: Create project directory 
      file:
        path: "{{TOMCAT_DIR}}" 
        state: directory 
        mode: 0755
        owner: "{{USERNAME}}"
        group: "{{USERNAME}}"
      
    - name: Download and extract tomcat 
      unarchive:
        src: "{{TOMCAT_URL}}"
        dest: "{{TOMCAT_DIR}}"
        remote_src: yes
      become_user:  "{{USERNAME}}"

    - name: List files and directories in webapps
      find:
        paths: "{{TOMCAT_DIR}}/{{TOMCAT_TAR_DIR}}/webapps"
        file_type: any
      register: out

    - name: Remove files in webapps
      file:
        path: "{{item.path}}"
        state: absent
      with_items: "{{out.files}}"

    - name: Download War and Jar files
      get_url:
        url: "{{item.URL}}"
        dest: "{{item.LOC}}"
      with_items: 
        - "{{WAR_URL}}"
        - "{{JDBC_URL}}"

    - name: Update context.xml file 
      blockinfile:
        path: "{{TOMCAT_DIR}}/{{TOMCAT_TAR_DIR}}/conf/context.xml"
        block: '<Resource name="jdbc/TestDB" auth="Container" type="javax.sql.DataSource" maxTotal="100" maxIdle="30"  maxWaitMillis="10000" username="student" password="student@1" driverClassName="com.mysql.jdbc.Driver" url="jdbc:mysql://localhost:3306/studentapp"/>'
        insertbefore: "</Context>"

    - name: Check tomcat running or not
      shell: ps -ef | grep java | grep /tomcat | grep -v grep 
      register: out
      ignore_errors: yes

    - name: Start Tomcat 
      shell: "nohup sh {{TOMCAT_DIR}}/{{TOMCAT_TAR_DIR}}/bin/startup.sh"
      when: out.rc != 0

    - name: Restart Tomcat 
      shell: "nohup sh {{TOMCAT_DIR}}/{{TOMCAT_TAR_DIR}}/bin/shutdown.sh && nohup sh {{TOMCAT_DIR}}/{{TOMCAT_TAR_DIR}}/bin/startup.sh"
      when: out.rc == 0
