{
"Parameters" : {

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "EnvType" : {
        "Description" : "Enter the Enviornment",
        "Type" : "String",
        "AllowedValues" : [ "prod", "test" ] ,
        "ConstraintDescription" : "You must select a environment"
    }
    
},

"Mappings" : {
"AWSRegionAMI" : {
    "us-east-1"        : {"64" : "ami-26ebbc5c" },
    "us-west-1"        : {"64" : "ami-7f77b31f" }
    }
},

"Conditions" : {
    "CreateProdResources" : {"Fn::Equals" : [{"Ref" : "EnvType"}, "prod"]},
    "CreateTestResources" : {"Fn::Equals" : [{"Ref" : "EnvType"}, "test"]}
  },

"Resources" : {
    "VPC" : {
        "Type" : "AWS::EC2::VPC",
        "Properties" : {
          "CidrBlock" : "10.0.0.0/22",
          "Tags" : [ {"Key" : "Name", "Value" : "student-vpc" } ]
        }
      },

    "SubnetPublic" : {
        "Type" : "AWS::EC2::Subnet",
        "Properties" : {
          "VpcId" : { "Ref" : "VPC" },
          "CidrBlock" : "10.0.1.0/24",
          "AvailabilityZone" : "us-east-1a",
          "Tags" : [ {"Key" : "Name", "Value" : "student-subnet-1a-PUBLIC" } ]
        }
      },
    
      "SubnetPrivate" : {
        "Type" : "AWS::EC2::Subnet",
        "Properties" : {
          "VpcId" : { "Ref" : "VPC" },
          "CidrBlock" : "10.0.2.0/24",
          "AvailabilityZone" : "us-east-1a",
          "Tags" : [ {"Key" : "Name", "Value" : "student-subnet-1a-PRIVATE" } ]
        }
      },

      "InternetGateway" : {
        "Type" : "AWS::EC2::InternetGateway",
        "Properties" : {
          "Tags" : [ {"Key" : "Name", "Value" : "Student-IGW" } ]
        }
      },

      "AttachGateway" : {
        "Type" : "AWS::EC2::VPCGatewayAttachment",
        "Properties" : {
          "VpcId" : { "Ref" : "VPC" },
          "InternetGatewayId" : { "Ref" : "InternetGateway" }
        }
     },

     "RouteTable" : {
        "Type" : "AWS::EC2::RouteTable",
        "Properties" : {
          "VpcId" : {"Ref" : "VPC"},
          "Tags" : [ {"Key" : "Name", "Value" : "Public-Route" } ]
        }
      },

      "Route" : {
        "Type" : "AWS::EC2::Route",
        "DependsOn" : "AttachGateway",
        "Properties" : {
          "RouteTableId" : { "Ref" : "RouteTable" },
          "DestinationCidrBlock" : "0.0.0.0/0",
          "GatewayId" : { "Ref" : "InternetGateway" }
        }
      },
  
      "SubnetRouteTableAssociation" : {
        "Type" : "AWS::EC2::SubnetRouteTableAssociation",
        "Properties" : {
          "SubnetId" : { "Ref" : "SubnetPublic" },
          "RouteTableId" : { "Ref" : "RouteTable" }
        }
      },

      "InstanceSecurityGroup" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "VpcId" : { "Ref" : "VPC" },
          "GroupDescription" : "Enable SSH access via port 22",
          "SecurityGroupIngress" : [
            {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" },
            { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" }
           ]
        }
      },

      "Ec2InstanceProd" : {
        "Condition" : "CreateProdResources",
        "Type" : "AWS::EC2::Instance",
        "Properties" : {
          "ImageId" : { "Fn::FindInMap" : [ "AWSRegionAMI", { "Ref" : "AWS::Region" }, 64 ] } ,
          "AvailabilityZone" : "us-east-1a",
          "InstanceType" : "t2.small",
          "KeyName" : { "Ref" : "KeyName" },
          "NetworkInterfaces": [ {
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "GroupSet": [{ "Ref" : "InstanceSecurityGroup" }],
            "SubnetId": { "Ref" : "SubnetPublic" }
          } ]
        }
      },

      "Ec2InstanceTest" : {
        "Type" : "AWS::EC2::Instance",
        "Condition" : "CreateTestResources",
        "Properties" : {
          "ImageId" : { "Fn::FindInMap" : [ "AWSRegionAMI", { "Ref" : "AWS::Region" }, 64 ] } ,
          "AvailabilityZone" : "us-east-1a",
          "InstanceType" : "t2.micro",
          "KeyName" : { "Ref" : "KeyName" },
          "NetworkInterfaces": [ {
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "GroupSet": [{ "Ref" : "InstanceSecurityGroup" }],
            "SubnetId": { "Ref" : "SubnetPublic" }
          } ]
        }
      }
},

"Outputs" : {
    "InstanceIdProd" : {
        "Condition" : "CreateProdResources",
      "Description" : "InstanceId of the newly created EC2 instance",
      "Value" : { "Ref" : "Ec2InstanceProd" }
    },
    "PublicIPProd" : {
        "Condition" : "CreateProdResources",
        "Description" : "Public IP address of the newly created EC2 instance",
        "Value" : { "Fn::GetAtt" : [ "Ec2InstanceProd", "PublicIp" ] }
      },

      "InstanceIdTest" : {
        "Condition" : "CreateTestResources",
        "Description" : "InstanceId of the newly created EC2 instance",
        "Value" : { "Ref" : "Ec2InstanceProd" }
      },
      "PublicIPTest" : {
        "Condition" : "CreateTestResources",
          "Description" : "Public IP address of the newly created EC2 instance",
          "Value" : { "Fn::GetAtt" : [ "Ec2InstanceProd", "PublicIp" ] }
        }

}

}
